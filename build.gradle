
def PROJECTNAME = "Coliper IBean"

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'maven'
apply plugin: 'signing'

group = "com.example.applications"
version = '0.4.1'
description = 'creates all artifacts of the Coliper IBean project'
sourceCompatibility = 1.8



// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-lang3:3.+'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'
    implementation 'com.google.code.gson:gson:2.4'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.6.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.6.1'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation 'commons-beanutils:commons-beanutils:1.9.3'
    testImplementation 'org.assertj:assertj-core:3.8.0'
}

javadoc {
    title = PROJECTNAME + ' API ' + version 
    options.stylesheetFile file('doc-src/javadoc-stylesheet.css', PathValidation.FILE)
    options.links "https://commons.apache.org/proper/commons-lang/apidocs/",
                  "https://docs.oracle.com/javase/8/docs/api/",
                  "http://fasterxml.github.io/jackson-core/javadoc/2.6/",
                  "http://fasterxml.github.io/jackson-databind/javadoc/2.6/"
    options.linksOffline("https://static.javadoc.io/com.google.code.gson/gson/2.8.5/", 
                         "./doc-src/gson-2.4-javadoc")
}


//////////////////////////////////////////////////////////////////////////////////////////
// Creation of upload artefacts.

archivesBaseName = "ibean"

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

signing {
    sign configurations.archives
}


//////////////////////////////////////////////////////////////////////////////////////////
// Maven Central upload.

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Coliper IBean'
        packaging 'jar'
        // optionally artifactId can be defined here 
        description 'Java library used to define beans as interfaces.'
        url 'https://coliper.github.io/ibean'

        scm {
          connection 'scm:git:git://github.com/coliper/ibean.git'
          developerConnection 'scm:git:ssh://github.com:coliper/ibean.git'
          url 'http://github.com/coliper/ibean/tree/master'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'alex'
            name 'Alexander Einhaeuser'
            email 'alex@coliper.org'
          }
        }
      }
    }
  }
}

/*

Following steps need to be done to build and upload a new version:

1) Do all changes in a separate branch.

2) Adopt documentation in doc-src/intro.templ.md.

3) Change version in build.gradle.

4) Run build and tests.
  > gradle clean assemble
  
5) Distribute documentation.
  > gradle ???

6) Commit and all changes.

7) Create version tag.

8) Push changes.

9) Upload artefacts to Maven Central.
  > gradle ???

10) Merge branch into master.

*/